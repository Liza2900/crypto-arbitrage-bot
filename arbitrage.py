import asyncio
from telegram import Update
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes
from filters import (
    fetch_prices_from_exchanges,
    find_arbitrage_opportunities,
    build_filters_menu,
    handle_filter_callback,
    EXCHANGES
)

TOKEN = "YOUR_BOT_TOKEN"

# –ü–æ—á–∞—Ç–∫–æ–≤—ñ —Ñ—ñ–ª—å—Ç—Ä–∏ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
def default_filters():
    return {
        'min_profit': 0.8,
        'min_volume': 10,
        'budget': 100,
        'is_futures': False,
        'exchanges_buy': {ex: True for ex in EXCHANGES},
        'exchanges_sell': {ex: True for ex in EXCHANGES},
        'max_lifetime': 30
    }

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['filters'] = default_filters()
    await update.message.reply_text("üîç –í–∏–±–µ—Ä—ñ—Ç—å —Ñ—ñ–ª—å—Ç—Ä–∏ –¥–ª—è –ø–æ—à—É–∫—É –∞—Ä–±—ñ—Ç—Ä–∞–∂—É:",
                                    reply_markup=build_filters_menu(context.user_data['filters']))

# –û–±—Ä–æ–±–∫–∞ /search ‚Äî –∑–Ω–∞—Ö–æ–¥–∏—Ç—å —Å–∏–≥–Ω–∞–ª–∏ —ñ –Ω–∞–¥—Å–∏–ª–∞—î
async def search(update: Update, context: ContextTypes.DEFAULT_TYPE):
    filters = context.user_data.get('filters', default_filters())
    await update.message.reply_text("‚è≥ –ü–æ—à—É–∫ –º–æ–∂–ª–∏–≤–æ—Å—Ç–µ–π –∞—Ä–±—ñ—Ç—Ä–∞–∂—É...")
    
    prices = await fetch_prices_from_exchanges()
    signals = find_arbitrage_opportunities(prices, filters)

    if not signals:
        await update.message.reply_text("‚ùå –ù–µ–º–∞—î –º–æ–∂–ª–∏–≤–æ—Å—Ç–µ–π –∞—Ä–±—ñ—Ç—Ä–∞–∂—É –∑–∞ –ø–æ—Ç–æ—á–Ω–∏–º–∏ —Ñ—ñ–ª—å—Ç—Ä–∞–º–∏.")
    else:
        for sig in signals:
            msg = (
                f"üí∞ {sig['coin']} –ê—Ä–±—ñ—Ç—Ä–∞–∂
"
                f"–ö—É–ø–∏—Ç–∏ –Ω–∞: {sig['buy_exchange']} ‚Äî ${sig['buy_price']:.4f}
"
                f"–ü—Ä–æ–¥–∞—Ç–∏ –Ω–∞: {sig['sell_exchange']} ‚Äî ${sig['sell_price']:.4f}
"
                f"üîÅ –ú–µ—Ä–µ–∂–∞: {sig['network']}, –ö–æ–º—ñ—Å—ñ—è: ${sig['withdraw_fee']}
"
                f"üìä –°–ø—Ä–µ–¥: {sig['spread']}%
"
                f"üì¶ –û–±—Å—è–≥: ${sig['volume']}")
            await update.message.reply_text(msg)

# –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –∑–∞–ø—É—Å–∫—É
async def main():
    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("search", search))
    app.add_handler(CallbackQueryHandler(handle_filter_callback))

    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ")
    await app.run_polling()

if __name__ == "__main__":
    asyncio.run(main())




